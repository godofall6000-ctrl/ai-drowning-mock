[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build-backend"

[project]
name = "ai-drowning-detection"
version = "1.0.0"
description = "Advanced AI system for drowning detection using deep learning"
authors = [
    {name = "AI Drowning Detection Team", email = "team@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "tensorflow>=2.8.0",
    "opencv-python>=4.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "Pillow>=8.0.0",
    "kaggle>=1.5.0",
    "requests>=2.25.0",
    "flask>=2.0.0",
    "mlflow>=1.0.0",
    "shap>=0.40.0",
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/username/ai-drowning-detection"
Repository = "https://github.com/username/ai-drowning-detection"
Documentation = "https://ai-drowning-detection.readthedocs.io/"
Issues = "https://github.com/username/ai-drowning-detection/issues"

[project.scripts]
drowning-detect = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["tensorflow", "sklearn", "cv2"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=html --cov-report=xml"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]